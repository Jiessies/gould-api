<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- 基础数据库配置 -->
    <!--<bean id="dataSourceBis" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        &lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;
        <property name="initialSize" value="3"/>
        <property name="minIdle" value="3"/>
        <property name="maxActive" value="20"/>

        &lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;
        <property name="maxWait" value="60000"/>

        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        &lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;
        <property name="filters" value="stat"/>
    </bean>
    <bean id="sqlSessionFactoryBis" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
        <property name="dataSource" ref="dataSourceBis"/>
    </bean>
    <bean id="mapperScannerConfigurerBis" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ykly.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBis"/>
    </bean>
    <bean id="transactionManagerBis" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceBis"/>
        <qualifier value="bis"/>
    </bean>-->

    <!--订单单表-->
    <bean id="dataSourceOrderOther" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="driverClassName" value="${jdbc.orderOther.driverClassName}"/>
        <property name="url" value="${jdbc.orderOther.url}"/>
        <property name="username" value="${jdbc.orderOther.username}"/>
        <property name="password" value="${jdbc.orderOther.password}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="3"/>
        <property name="minIdle" value="3"/>
        <property name="maxActive" value="20"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>

    <!-- 订单分库分表配置-->
    <bean id="dataSourceOrder0" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.order.driverClassName}"/>
        <property name="url" value="${jdbc.order.url}"/>
        <property name="username" value="${jdbc.order.username}"/>
        <property name="password" value="${jdbc.order.password}"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="3"/>
        <property name="minIdle" value="3"/>
        <property name="maxActive" value="20"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat"/>
    </bean>
    <bean id="dataSourceOrder1" parent="dataSourceOrder0">
        <property name="url" value="${jdbc.order.1.url}"/>
        <property name="username" value="${jdbc.order.1.username}"/>
        <property name="password" value="${jdbc.order.1.password}"/>
    </bean>
    <bean id="dataSourceOrder2" parent="dataSourceOrder0">
        <property name="url" value="${jdbc.order.2.url}"/>
        <property name="username" value="${jdbc.order.2.username}"/>
        <property name="password" value="${jdbc.order.2.password}"/>
    </bean>

    <bean id="routingDataSource" class="com.ykly.datasource.RoutingDataSource">
        <property name="defaultTargetDataSource" ref="dataSourceOrderOther"/>
        <property name="targetDataSources">
            <map>
                <entry key="dataSourceOrder0" value-ref="dataSourceOrder0"/>
                <entry key="dataSourceOrder1" value-ref="dataSourceOrder1"/>
                <entry key="dataSourceOrder2" value-ref="dataSourceOrder2"/>
            </map>
        </property>
        <property name="lastLength" value="${lastLength}"/>
        <property name="tableCount" value="${db.order.tableCount}"/>
        <property name="dbCount" value="${db.order.dbCount}"/>
        <property name="dataSourceOrderOther" value="${dataSourceOrderOther}"/>
        <property name="dataSourcePre" value="${dataSourcePre}"/>
    </bean>

    <bean id="sqlSessionFactoryOrder" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
        <property name="dataSource" ref="routingDataSource"/>
    </bean>

    <bean id="mapperScannerConfigurerOrder" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.ykly.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryOrder"/>
    </bean>

    <bean id="transactionManagerdataSourceOrder"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="routingDataSource"/>
        <qualifier value="order"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManagerdataSourceOrder"/>

    <!--<aop:config>
        <aop:pointcut id="orderServiceMethods" expression="execution(* com.ykly.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="orderServiceMethods"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManagerdataSourceOrder">
        <tx:attributes>
            <tx:method name="*" isolation="DEFAULT" propagation="REQUIRED" rollback-for="java.lang.RuntimeException"
                       timeout="100"/>
            <tx:method name="get*" isolation="DEFAULT" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>-->
</beans>
