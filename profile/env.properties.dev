
dubbo.application.name=example-provider
dubbo.registry.protocol=zookeeper
dubbo.registry.address=127.0.0.1:2181
dubbo.protocol.name=dubbo
dubbo.protocol.port=20881

http.timeout.socket.short=5000
http.timeout.socket.long=60000
http.timeout.connect=5000
http.timeout.connect.request=5000
http.pooling.max-totle=200
http.pooling.max-per-route=200

rabbitmq.address=127.0.0.1
rabbitmq.port=5672
rabbitmq.username=guest
rabbitmq.password=guest
rabbitmq.virtualHost=/

jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://127.0.0.1:3306/opensystem?useUnicode=true&amp;characterEncoding=UTF-8
jdbc.username=root
jdbc.password=123456

jdbc.orderOther.driverClassName=com.mysql.jdbc.Driver
jdbc.orderOther.url=jdbc:mysql://127.0.0.1:3306/ordercenter?useUnicode=true&amp;characterEncoding=UTF-8
jdbc.orderOther.username=root
jdbc.orderOther.password=123456

jdbc.order.driverClassName=com.mysql.jdbc.Driver
jdbc.order.url=jdbc:mysql://127.0.0.1:3306/ordercenter_0?useUnicode=true&amp;characterEncoding=UTF-8
jdbc.order.username=root
jdbc.order.password=123456

jdbc.order.1.url=jdbc:mysql://127.0.0.1:3306/ordercenter_1?useUnicode=true&amp;characterEncoding=UTF-8
jdbc.order.1.username=root
jdbc.order.1.password=123456

jdbc.order.2.url=jdbc:mysql://127.0.0.1:3306/ordercenter_2?useUnicode=true&amp;characterEncoding=UTF-8
jdbc.order.2.username=root
jdbc.order.2.password=123456

db.order.tableCount=16
lastLength=2
db.order.dbCount=16
dataSourcePre=dataSourceOrder
dataSourceOrderOther=dataSourceOrderOther


#ip地址
redis.hostName=127.0.0.1
#端口号
redis.port=6379
#如果有密码
#redis.password=123456
#客户端超时时间单位是毫秒 默认是2000
redis.timeout=10000


#最大空闲数
redis.maxIdle=300
#连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal
#redis.maxActive=600
#控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
redis.maxTotal=1000
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
redis.maxWaitMillis=1000
#连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.minEvictableIdleTimeMillis=300000
#每次释放连接的最大数目,默认3
redis.numTestsPerEvictionRun=1024
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.timeBetweenEvictionRunsMillis=30000
#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
redis.testOnBorrow=true
#在空闲时检查有效性, 默认false
redis.testWhileIdle=true


#redis.sentinel.host1=172.20.1.230
#redis.sentinel.port1=26379

#redis.sentinel.host2=172.20.1.231
#redis.sentinel.port2=26379

#redis.sentinel.host3=172.20.1.232
#redis.sentinel.port3=26379


solr.cloud.zkhost=127.0.0.1:2181
solr.cloud.collection=collection1
